{"version":3,"file":"static/js/623.b70d3017.chunk.js","mappings":"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","sources":["pages/dictionary/dictionaryPage.styled.js","helpers/icons/plus.svg?react","pages/dictionary/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport search from \"helpers/icons/search.svg\";\nimport toggle from \"helpers/icons/toggle.svg\";\n\nexport const DictionaryPageContainer = styled.div`\n  height: 80vh;\n  padding: 32px 16px;\n\n  @media only screen and (min-width: 768px) {\n    padding: 64px 32px;\n  }\n\n  .FilterContainer {\n    @media only screen and (min-width: 1440px) {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n\n  .Form {\n    position: relative;\n    display: grid;\n    gap: 8px;\n\n    @media only screen and (min-width: 768px) {\n      display: flex;\n    }\n  }\n\n  .CountContainer {\n    @media only screen and (min-width: 768px) {\n      display: flex;\n      align-items: end;\n      gap: 16px;\n\n      margin-top: 30px;\n    }\n\n    @media only screen and (min-width: 1440px) {\n      margin-top: 0;\n      align-items: center;\n    }\n  }\n\n  .SearchContainer {\n    position: relative;\n\n    &::after {\n      content: url(${search});\n      position: absolute;\n      top: 14px;\n      right: 24px;\n    }\n  }\n\n  .custom-input {\n    position: relative;\n\n    &::after {\n      content: url(${toggle});\n      position: absolute;\n      top: 14px;\n      right: 24px;\n    }\n  }\n\n  .Input {\n    border: 1px solid rgba(18, 20, 23, 0.1);\n    border-radius: 15px;\n    padding: 12px 24px;\n    width: 100%;\n    height: 48px;\n    box-sizing: border-box;\n\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 150%;\n    color: #121417;\n\n    &:focus {\n      border-color: transparent;\n      outline: none;\n    }\n  }\n\n  .Input[id=\"filters\"] {\n    @media only screen and (min-width: 768px) {\n      width: 274px;\n    }\n  }\n\n  .Input[id=\"statistics\"] {\n    @media only screen and (min-width: 768px) {\n      width: 164px;\n    }\n  }\n\n  .dropdown {\n    z-index: 1000;\n    position: absolute;\n    margin-top: 5px;\n    display: none;\n    gap: 8px;\n\n    border-radius: 15px;\n    padding: 12px 24px;\n    width: 343px;\n    box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n    background: #fff;\n  }\n\n  .ListItem {\n    cursor: pointer;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 150%;\n    border-radius: 6px;\n\n    &:hover {\n      background-color: #85aa9f;\n    }\n  }\n\n  .CountWord {\n    margin-top: 50px;\n    font-weight: 500;\n    font-size: 14px;\n    color: rgba(18, 20, 23, 0.5);\n\n    align-items: center;\n    display: flex;\n    gap: 8px;\n\n    @media only screen and (min-width: 768px) {\n      margin-top: 0px;\n    }\n  }\n\n  .NumberCountWord {\n    font-weight: 500;\n    font-size: 20px;\n    color: #121417;\n  }\n\n  .ButtonList {\n    margin-top: 16px;\n    display: flex;\n    gap: 16px;\n\n    @media only screen and (min-width: 1440px) {\n      margin-top: 0;\n    }\n  }\n\n  .ButtonItem {\n    text-decoration: none;\n    display: flex;\n    gap: 8px;\n    cursor: pointer;\n    color: #121417;\n\n    &:hover {\n      color: #85aa9f;\n    }\n\n    &:hover .IconButton {\n      path {\n        stroke: #686868;\n        transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n  }\n\n  .RadioButtonList {\n    position: absolute;\n    top: 120px;\n    display: grid;\n    gap: 34px;\n    left: 14px;\n\n    @media only screen and (min-width: 768px) {\n      position: static;\n      margin-left: 20px;\n    }\n  }\n\n  .RadioButtonItem {\n    position: relative;\n    display: flex;\n    gap: 8px;\n\n    font-weight: 400;\n    font-size: 12px;\n    text-align: center;\n    align-items: center;\n  }\n\n  .RadioButton {\n    height: 12px;\n    width: 12px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    outline: none;\n    cursor: pointer;\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      width: 14px;\n      height: 14px;\n      border-radius: 50%;\n      transform: translate(-50%, -50%);\n      background-color: #fff;\n      border: 3px solid #8a8a89;\n    }\n\n    &:checked:before {\n      border-color: #85aa9f;\n    }\n\n    &:checked::after {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background-color: #85aa9f;\n      transform: translate(-50%, -50%);\n      visibility: visible;\n    }\n  }\n\n  .TableContainer {\n    margin-top: 40px;\n    height: 457px;\n    @media only screen and (min-width: 768px) {\n      padding: 18px;\n      background: #fcfcfc;\n      border-radius: 15px;\n      margin-top: 24px;\n    }\n  }\n`;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#85AA9F\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M10 4.167v11.666M4.167 10h11.666\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.ea9d97b09f692ed8434ac3c7833cb2ec.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef, useState } from \"react\";\nimport { DictionaryPageContainer } from \"./dictionaryPage.styled\";\nimport Plus from \"helpers/icons/plus.svg?react\";\nimport Switch from \"helpers/icons/switch-horizontal.svg?react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllCategories,\n  ownWord,\n  statisticsWords,\n} from \"../../redux/data/data-operation\";\nimport { useDictionaryHook } from \"helpers/hooks/dictionaryHook\";\nimport { debounce } from \"lodash\";\nimport PageButtonList from \"../../components/pageButtonList\";\nimport { openModalAddWord } from \"../../redux/modals/modal-slice\";\nimport { NavLink } from \"react-router-dom\";\nimport Table from \"../../components/table\";\n\nconst DictionaryPage = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    filters: \"\",\n    statistics: \"\",\n    isIrregular: undefined,\n    page: 1,\n  });\n  const [isVerb, setIsVerb] = useState(false);\n\n  const { categories } = useDictionaryHook();\n  const data = useSelector((state) => state.data.words);\n  const statistics = useSelector((state) => state.data.statistics);\n  const isLoadingCategories = useSelector(\n    (state) => state.data.isLoadingCategories\n  );\n  const isLoadingStatistics = useSelector(\n    (state) => state.data.isLoadingStatistics\n  );\n  const isDeleteWord = useSelector((state) => state.data.isDeleteWord);\n  const isAddWord = useSelector((state) => state.data.isAddWord);\n\n  useEffect(() => {\n    dispatch(ownWord(isDeleteWord || isAddWord));\n    dispatch(getAllCategories());\n    dispatch(statisticsWords());\n  }, [dispatch, isDeleteWord, isAddWord]);\n\n  const delayedDispatchRef = useRef(\n    debounce((formData) => {\n      dispatch(ownWord(formData));\n    }, 300)\n  );\n\n  useEffect(() => {\n    delayedDispatchRef.current(formData);\n  }, [formData]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value.trim(),\n    });\n  };\n\n  const handleListItemClick = (value) => {\n    setFormData((prevState) => ({\n      ...prevState,\n      statistics: value,\n    }));\n    value === \"verb\" ? setIsVerb(true) : setIsVerb(false);\n  };\n\n  const handleIsIrregularClick = (boolean) => {\n    setFormData((prevState) => ({\n      ...prevState,\n      isIrregular: boolean,\n    }));\n  };\n\n  return (\n    <DictionaryPageContainer>\n      <div className=\"FilterContainer\">\n        <form className=\"Form\">\n          <div className=\"SearchContainer\">\n            <input\n              id=\"filters\"\n              className=\"Input\"\n              type=\"text\"\n              placeholder=\"Find the word\"\n              name=\"filters\"\n              value={formData.filters}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"custom-input\">\n            <input\n              id=\"statistics\"\n              name=\"statistics\"\n              className=\"Input\"\n              type=\"text\"\n              placeholder=\"Categories\"\n              value={formData.statistics}\n              onChange={handleInputChange}\n            />\n            <ul className=\"dropdown\">\n              <li className=\"ListItem\" onClick={() => handleListItemClick(\"\")}>\n                categories\n              </li>\n              {!isLoadingCategories ? (\n                categories.map((item) => (\n                  <li\n                    className=\"ListItem\"\n                    key={item}\n                    onClick={() => handleListItemClick(item)}\n                  >\n                    {item}\n                  </li>\n                ))\n              ) : (\n                <div>Loading...</div>\n              )}\n            </ul>\n          </div>\n          <ul\n            className=\"RadioButtonList\"\n            style={{ display: isVerb ? \"flex\" : \"none\" }}\n          >\n            <li className=\"RadioButtonItem\">\n              <input\n                className=\"RadioButton\"\n                id=\"regular\"\n                name=\"regular\"\n                type=\"radio\"\n                onChange={() => handleIsIrregularClick(false)}\n                checked={formData.isIrregular === false}\n              />\n              Regular\n            </li>\n            <li className=\"RadioButtonItem\">\n              <input\n                className=\"RadioButton\"\n                id=\"irregular\"\n                name=\"irregular\"\n                type=\"radio\"\n                onChange={() => handleIsIrregularClick(true)}\n                checked={formData.isIrregular === true}\n              />\n              Irregular\n            </li>\n          </ul>\n        </form>\n        <div className=\"CountContainer\">\n          <p className=\"CountWord\">\n            To study:\n            <span className=\"NumberCountWord\">\n              {!isLoadingStatistics && statistics.totalCount}\n            </span>\n          </p>\n          <ul className=\"ButtonList\">\n            <li\n              className=\"ButtonItem\"\n              onClick={() => dispatch(openModalAddWord())}\n            >\n              Add word <img src={Plus} alt=\"user\" className=\"IconButton\" />\n            </li>\n            <li>\n              <NavLink className=\"ButtonItem\" to=\"/training\">\n                Train oneself <img src={Switch} alt=\"Switch\" className=\"IconButton\" />\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"TableContainer\">\n        {data.results && data.results.length !== 0 ? (\n          <Table data={data} />\n        ) : (\n          <p style={{ fontSize: \"20px\", textAlign: \"center\" }}>\n            You dont have own words\n          </p>\n        )}\n      </div>\n      {data.totalPages > 1 && (\n        <PageButtonList\n          data={data}\n          formData={formData}\n          setFormData={setFormData}\n        />\n      )}\n    </DictionaryPageContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["DictionaryPageContainer","styled","_templateObject","_taggedTemplateLiteral","search","toggle","DictionaryPage","dispatch","useDispatch","formData","setFormData","useState","filters","statistics","isIrregular","undefined","page","isVerb","setIsVerb","categories","useDictionaryHook","data","useSelector","state","words","isLoadingCategories","isLoadingStatistics","isDeleteWord","isAddWord","useEffect","ownWord","getAllCategories","statisticsWords","delayedDispatchRef","useRef","debounce","current","handleInputChange","event","name","value","target","trim","handleListItemClick","prevState","handleIsIrregularClick","boolean","_jsxs","children","className","_jsx","id","type","placeholder","onChange","onClick","map","item","style","display","checked","totalCount","openModalAddWord","src","Plus","alt","NavLink","to","Switch","results","length","Table","fontSize","textAlign","totalPages","PageButtonList"],"sourceRoot":""}